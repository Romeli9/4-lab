{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Student API",
      "description": "API for managing students"
    },
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/students": {
        "get": {
          "summary": "Get all students",
          "description": "Returns a list of all students",
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Student"
                }
              }
            }
          }
        },
        "post": {
          "summary": "Add a student",
          "description": "Adds a new student to the database",
          "parameters": [
            {
              "name": "student",
              "in": "body",
              "description": "The student to add",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StudentInput"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Student added successfully"
            },
            "400": {
              "description": "Invalid request body"
            }
          }
        }
      },
      "/students/{id}": {
        "get": {
          "summary": "Get a student by ID",
          "description": "Returns a single student with the specified ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of the student to retrieve",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "schema": {
                "$ref": "#/definitions/Student"
              }
            },
            "404": {
              "description": "Student not found"
            }
          }
        },
        "put": {
          "summary": "Update a student by ID",
          "description": "Updates the information of the student with the specified ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of the student to update",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "student",
              "in": "body",
              "description": "The updated student information",
              "required": true,
              "schema": {
                "$ref": "#/definitions/StudentInput"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Student updated successfully"
            },
            "400": {
              "description": "Invalid request body"
            },
            "404": {
              "description": "Student not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a student by ID",
          "description": "Deletes the student with the specified ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of the student to delete",
              "required": true,
              "schema": {
              "type": "integer"
              }
              }
              ],
              "responses": {
              "204": {
              "description": "Student deleted successfully"
              },
              "404": {
              "description": "Student not found"
              }
              }
              }
              }
              },
              "components": {
              "schemas": {
              "Student": {
              "type": "object",
              "required": [
              "id",
              "name",
              "age",
              "email"
              ],
              "properties": {
              "id": {
              "type": "integer",
              "format": "int64",
              "description": "The unique identifier for a student"
              },
              "name": {
              "type": "string",
              "description": "The name of the student"
              },
              "age": {
              "type": "integer",
              "description": "The age of the student"
              },
              "email": {
              "type": "string",
              "description": "The email address of the student"
              }
              }
              }
              }
              }
              }  